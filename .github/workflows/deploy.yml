name: Build and Deploy to Docker Hub & Kubernetes

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build-deploy:
    runs-on: [self-hosted, deployment-runner]
    env:
      KUBECONFIG: /home/ubuntu/.kube/config

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up kubectl (self-managed cluster)
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Wait for Kubernetes to be ready
        run: |
          echo "Waiting for Kubernetes API..."
          for i in {1..30}; do
            if kubectl get nodes > /dev/null 2>&1; then
              echo "Kubernetes is ready."
              break
            fi
            echo "Waiting ($i)..."
            sleep 5
          done

      - name: Ensure Ingress-NGINX is installed
        run: |
          set -e

          echo "Adding and updating ingress-nginx Helm repo..."
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx || true
          helm repo update

          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
          --namespace ingress-nginx \
          --set controller.kind=DaemonSet \
          --set controller.daemonset.useHostPort=true \
          --set controller.hostPort.enabled=true \
          --set controller.service.type=ClusterIP \
          --set controller.containerPort.http=80 \
          --set controller.containerPort.https=443 \
          --set controller.admissionWebhooks.enabled=false

          echo "Waiting for ingress-nginx-controller deployment to be ready..."
          kubectl rollout status daemonset ingress-nginx-controller -n ingress-nginx --timeout=90s

          echo "Patching ingress-nginx-controller to set CPU/memory limits..."
          kubectl -n ingress-nginx patch daemonset ingress-nginx-controller \
            --type='json' \
            -p='[
              {
                "op": "add",
                "path": "/spec/template/spec/containers/0/resources",
                "value": {
                  "requests": {
                    "cpu": "50m",
                    "memory": "64Mi"
                  },
                  "limits": {
                    "cpu": "150m",
                    "memory": "128Mi"
                  }
                }
              }
            ]'

      - name: Apply MongoDB Kubernetes Resources
        run: |
          kubectl apply -f k8s/mongo-pvc.yaml
          kubectl apply -f k8s/mongo-deployment.yaml  
          kubectl apply -f k8s/mongo-service.yaml

      - name: Wait for ingress-nginx-controller to be ready
        run: |
           echo "Waiting for ingress-nginx-controller DaemonSet to be ready..."
           kubectl rollout status daemonset ingress-nginx-controller -n ingress-nginx --timeout=90s
      
      - name: Apply Angular Deployment and Service
        run: |
          kubectl apply -f k8s/angular-deployment.yaml
          kubectl apply -f k8s/angular-service.yaml

          kubectl delete ingress angular-ingress --ignore-not-found=true
          kubectl apply -f k8s/ingress.yaml --validate=false

      - name: Wait for MongoDB to be Ready
        run: |
          echo "Waiting for MongoDB pod to be ready..."
          kubectl rollout status deployment mongo -n default --timeout=90s

      - name: Apply Spring App Deployment and Service
        run: |
          kubectl apply -f k8s/spring-deployment.yaml
          kubectl apply -f k8s/spring-service.yaml

      - name: Clean up unused Docker images
        run: docker image prune -f
